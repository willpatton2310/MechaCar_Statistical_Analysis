x <- 3
numlist <- c(0,1,2,3,4,5,6,7,8,9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
x <- 3
numlist <- c(0,1,2,3,4,5,6,7,8,9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
x <- 3
numlist <- c(0,1,2,3,4,5,6,7,8,9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
x <- 3
numlist <- c(0,1,2,3,4,5,6,7,8,9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
setwd("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Homework/R_Analysis/01_Demo")
x <- 3
numlist <- c(0,1,2,3,4,5,6,7,8,9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
numlist[1]
demo_table[3,"Year"]
demo_table[3,3]
demo_table$"Vehicle_Class"
filter_table <- demo_table2[demo_table2$price > 10000,]
f3 <- demo_table2[demo_table2$price > 10000]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
nrow(demo_table)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
library(tidyverse)
View(filter_table)
View(filter_table2)
View(f3)
View(demo_table)
View(demo_table2)
View(demo_table2)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
View(demo_table)
View(f3)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
View(demo_table2)
View(summarize_demo)
View(demo_table2)
View(summarize_demo)
View(demo_table2)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
View(filter_table2)
View(summarize_demo)
View(demo_table2)
View(summarize_demo)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
View(demo_table3)
View(summarize_demo)
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
View(long_table)
View(summarize_demo)
View(wide_table)
all.equal(demo_table3,wide_table)
table <-demo_table3[,order(colnames(wide_table))]
all.equal(demo_table3,wide_table)
table <- demo_table3[,(colnames(wide_table))]
all.equal(demo_table3,wide_table
all.equal(demo_table3,wide_table)
all.equal(demo_table3,wide_table)
View(table)
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar()
miles_db <- (mpg)
View(miles_db)
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
View(mpg_summary)
View(miles_db)
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_col() #plot a bar plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
View(mpg_summary)
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
p + geom_point(aes(size = qsec))
plt + geom_point(aes(size = qsec))
> plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
> plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
View(mpg_long)
View(mpg_long)
View(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot()
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
cars ,<- (mtcars)
cars <- (mtcars)
View(cars)
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
View(population_table)
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
View(mtcars_filt)
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
View(used_cars)
View(used_matrix)
cor(used_matrix)
View(mtcars_filt)
lm(qsec ~ hp,mtcars) #create linear model
View(cars)
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
View(used_cars)
rm()
ls()
rm(list-ls())
rm(list=ls())
setwd("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge")
library(dplyr)
mech_car <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringAsFactors = F)
mech_car <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
setwd("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge/MechaCar_Statistical_Analysis")
mech_car <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(mech_car)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mech_car)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mech_car))
source("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge/MechaCar_Statistical_Analysis/MechaCarChallenge.R")
View(mech_car)
setwd("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge/MechaCar_Statistical_Analysis")
susp_coil <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(susp_coil)
View(susp_coil)
View(susp_coil)
View(mech_car)
View(susp_coil)
View(susp_coil)
susp_summary <- susp_coil %>% summarize(PSI)
View(susp_summary)
susp_summary <- susp_coil %>% summarize(Mean_PSI=mean(PSI))
View(susp_summary)
View(susp_summary)
susp_summary <- susp_coil %>% summarize(Mean=mean(PSI),Median=median(PSI))
View(susp_summary)
susp_summary <- susp_coil %>% summarize(Mean=mean(PSI),Median=median(PSI), Variance=variance(PSI), SD-sd(PSI))
susp_summary <- susp_coil %>% summarize(Mean=mean(PSI),Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(susp_summary)
source("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge/MechaCar_Statistical_Analysis/MechaCarChallenge.R")
View(susp_coil)
total_summary <- susp_coil %>% summarize(Mean=mean(PSI),Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
lot_summary <- susp_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(total_summary)
View(susp_summary)
View(total_summary)
View(lot_summary)
source("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge/MechaCar_Statistical_Analysis/MechaCarChallenge.R")
source("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge/MechaCar_Statistical_Analysis/MechaCarChallenge.R")
View(lot_summary)
lot_summary <- susp_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups='keep')
View(lot_summary)
library(dplyr)
total_summary <- susp_coil %>% summarize(Mean=mean(PSI),Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups='keep')
lot_summary <- susp_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups='keep')
View(total_summary)
View(susp_summary)
View(susp_coil)
View(lot_summary)
source("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge/MechaCar_Statistical_Analysis/MechaCarChallenge.R")
source("C:/Users/msoff/OneDrive/Desktop/Boot_Camp/Module_15_R/Challenge/MechaCar_Statistical_Analysis/MechaCarChallenge.R")
